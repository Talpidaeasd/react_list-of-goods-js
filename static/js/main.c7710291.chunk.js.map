{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABET","SORT_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","reverseField","currentGoods","sort","good1","good2","localeCompare","length","sortGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,iBAChBC,EAAc,SAyBPC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA3BU,SAACC,EAAOL,GAAqC,IAA1BM,EAAyB,wDACtDC,EAAY,YAAOF,GAmBzB,OAjBIL,GACFO,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXN,GACFC,EAAaL,UAGRK,EAOcM,CAAUlB,EAAiBK,EAAWE,GAE3D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaL,IAC5BkB,UAAWG,IACT,SAAU,UAAW,CAAE,WAAYjB,IAAcJ,IAJrD,iCAUA,wBACEmB,KAAK,SACLC,QAAS,kBAAMf,EAAaJ,IAC5BiB,UAAWG,IACT,SAAU,aAAc,CAAE,WAAYjB,IAAcH,IAJxD,4BAUA,wBACEkB,KAAK,SACLC,QAAS,WACPb,GAAYD,IAEdY,UAAWG,IACT,SAAU,aAAc,CAAE,YAAaf,IAN3C,sBAYEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPf,EAAa,IACbE,GAAW,IALf,sBAaJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OAAK,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCjG5CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c7710291.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABET = 'alphabetically';\nconst SORT_LENGTH = 'length';\n\nconst sortGoods = (goods, sortField, reverseField = false) => {\n  const currentGoods = [...goods];\n\n  if (sortField) {\n    currentGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    currentGoods.reverse();\n  }\n\n  return currentGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = sortGoods(goodsFromServer, sortField, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_ALPHABET)}\n          className={cn(\n            'button', 'is-info', { 'is-light': sortField !== SORT_ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_LENGTH)}\n          className={cn(\n            'button', 'is-success', { 'is-light': sortField !== SORT_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setReverse(!reverse);\n          }}\n          className={cn(\n            'button', 'is-warning', { 'is-light': !reverse },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (<li key={good} data-cy=\"Good\">{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}